{
  "version": 3,
  "sources": ["../node_modules/.pnpm/hotkey-mapper@2.1.2/node_modules/hotkey-mapper/node_modules/.pnpm/rambda@7.5.0/node_modules/rambda/src/_internals/keys.js", "../node_modules/.pnpm/hotkey-mapper@2.1.2/node_modules/hotkey-mapper/node_modules/.pnpm/rambda@7.5.0/node_modules/rambda/src/map.js", "../node_modules/.pnpm/hotkey-mapper@2.1.2/node_modules/hotkey-mapper/src/index.ts", "../node_modules/.pnpm/clipboardy@3.0.0/node_modules/clipboardy/browser.js", "../ts/CopyMarkdownQuote.user.ts"],
  "sourceRoot": "../",
  "sourcesContent": ["export const { keys } = Object\n", "import { INCORRECT_ITERABLE_INPUT } from './_internals/constants.js'\nimport { isArray } from './_internals/isArray.js'\nimport { keys } from './_internals/keys.js'\n\nexport function mapArray(\n  fn, list, isIndexed = false\n){\n  let index = 0\n  const willReturn = Array(list.length)\n\n  while (index < list.length){\n    willReturn[ index ] = isIndexed ? fn(list[ index ], index) : fn(list[ index ])\n\n    index++\n  }\n\n  return willReturn\n}\n\nexport function mapObject(fn, obj){\n  if (arguments.length === 1){\n    return _obj => mapObject(fn, _obj)\n  }\n  let index = 0\n  const objKeys = keys(obj)\n  const len = objKeys.length\n  const willReturn = {}\n\n  while (index < len){\n    const key = objKeys[ index ]\n    willReturn[ key ] = fn(\n      obj[ key ], key, obj\n    )\n    index++\n  }\n\n  return willReturn\n}\n\nexport const mapObjIndexed = mapObject\n\nexport function map(fn, iterable){\n  if (arguments.length === 1) return _iterable => map(fn, _iterable)\n  if (!iterable){\n    throw new Error(INCORRECT_ITERABLE_INPUT)\n  }\n\n  if (isArray(iterable)) return mapArray(fn, iterable)\n\n  return mapObject(fn, iterable)\n}\n", "import { mapObjIndexed } from \"rambda\";\ntype handler = (e: Partial<KeyboardEvent>) => void;\n/**\n * @reference view js keycode here: https://www.toptal.com/developers/keycode\n * @example\n * hotkeyMapper(\n *   {\n *     \"alt+1\": () => openLinkByCount(2 ** 1),\n *     \"alt+2\": () => openLinkByCount(2 ** 2),\n *     \"alt+3\": () => openLinkByCount(2 ** 3),\n *     \"shift+alt+1\": () => tryCopyLinkByCount(2 ** 1),\n *     \"shift+alt+2\": () => tryCopyLinkByCount(2 ** 2),\n *     \"shift+alt+3\": () => tryCopyLinkByCount(2 ** 3),\n *   },\n *   {capture: true}\n * )\n * // or if you want use react\n * export function useHotkeyMapper(...args: Parameters<typeof hotkeyMapper>) {\n *   useEffect(() => {\n *     return hotkeyMapper(...args);\n *   }, [args]);\n * }\n */\nexport default function hotkeyMapper<\n  K extends keyof GlobalEventHandlersEventMap\n>(\n  mapping: Record<string, handler>,\n  options?: AddEventListenerOptions & { on?: K; target?: EventTarget }\n) {\n  const handler: handler = (event) => {\n    if (!event.key) throw new Error(\"Invalid KeyboardEvent\");\n    if (!event.code) throw new Error(\"Invalid KeyboardEvent\");\n    const key = event.key?.toLowerCase();\n    const code = event.code?.toLowerCase();\n    const simp = event.code?.replace(/^(?:Key|Digit|Numpad)/, \"\").toLowerCase();\n    const map = new Proxy(event, {\n      get: (target, p: string) =>\n        Boolean(\n          {\n            [`${key}Key`]: true,\n            [`${code}Key`]: true,\n            [`${simp}Key`]: true,\n          }[p] ?? (target as any)[p]\n        ),\n    }) as unknown as Record<keyof KeyboardEvent, boolean>;\n    const mods = \"meta+alt+shift+ctrl\";\n    mapObjIndexed((fn: handler, hotkey: string) => {\n      const conds = `${mods}+${hotkey.toLowerCase()}`\n        .replace(/win|command|search/, \"meta\")\n        .replace(/control/, \"ctrl\")\n        .split(\"+\")\n        .map((key) => key.toLowerCase().trim())\n        .map((k, i) => [k, i >= 4 === (map as any)[`${k}Key`]]);\n      if (!Object.entries(Object.fromEntries(conds)).every(([, ok]) => ok))\n        return;\n      event.stopPropagation?.();\n      event.preventDefault?.();\n      return fn(event);\n    }, mapping);\n  };\n\n  const target = options?.target ?? globalThis;\n  target.addEventListener(options?.on ?? \"keydown\", handler, options);\n  return function unload() {\n    target.removeEventListener(options?.on ?? \"keydown\", handler, options);\n  };\n}\nexport function hotkeyDown(hotkey: string, options?: AddEventListenerOptions) {\n  return new Promise<void>((r) =>\n    hotkeyMapper(\n      { [hotkey]: () => r() },\n      { once: true, ...options, on: \"keydown\" }\n    )\n  );\n}\nexport function hotkeyUp(hotkey: string, options?: AddEventListenerOptions) {\n  return new Promise<void>((r) =>\n    hotkeyMapper(\n      { [hotkey]: () => r() },\n      { once: true, ...options, on: \"keyup\" }\n    )\n  );\n}", "/* eslint-env browser */\n\nconst clipboard = {};\n\nclipboard.write = async text => {\n\tawait navigator.clipboard.writeText(text);\n};\n\nclipboard.read = async () => navigator.clipboard.readText();\n\nclipboard.readSync = () => {\n\tthrow new Error('`.readSync()` is not supported in browsers!');\n};\n\nclipboard.writeSync = () => {\n\tthrow new Error('`.writeSync()` is not supported in browsers!');\n};\n\nexport default clipboard;\n", "// ==UserScript==\n// @name            Copy Markdown Quote Alt+C\n// @name:zh         Alt+C \u590D\u5236Markdown\u683C\u5F0F\u6807\u9898\u548C\u5730\u5740\u5FEB\u901F\u5206\u4EAB\n// @name:en         Alt+C Copy Title and Link as Markdown Style\n// @description     Press Alt+C to copy title and url as markdown style link `> ${SELECTION} [${TITLE}]( ${URL} )`\n// @description:zh  \u6309 Alt+C \u590D\u5236 Markdown \u683C\u5F0F\u7684\u94FE\u63A5 `> ${SELECTION} [${TITLE}]( ${URL} )`\n// @namespace       https://userscript.snomiao.com/\n// @version         0.8.4\n// @author          snomiao@gmail.com\n// @match           *://*/*\n// @grant           none\n// ==/UserScript==\n\nimport hotkeyMapper from \"hotkey-mapper\";\nimport clipboardy from \"clipboardy\";\n\n{\n  main();\n}\nfunction main() {\n  globalThis.cmqa ||= {};\n  globalThis.cmqa.unload?.();\n  globalThis.cmqa.unload = hotkeyMapper({\n    \"alt+c\": async (e) => {\n      e.preventDefault?.()\n      e.stopPropagation?.()\n      const selected = window?.getSelection()?.toString().trim() || \"\";\n      const quoted = selected && selected.replace(/.*/g, (s) => `> ${s}`);\n      const href = location.href;\n      const content = `- [${longestTitleGet()?.replace(\n        /([|])/,\n        (e) => \"\\\\\" + e\n      )}]( ${href} )\\n${quoted}`.trim();\n      await clipboardy.write(content);\n      alert(`copied: \\n${content}`);\n    },\n  });\n}\n\nfunction longestTitleGet() {\n  const LongestTitle = [\n    document.title,\n    document.querySelector(\"h1\")?.innerText || \"\",\n  ]\n    .map((str) => str.replace(/\\r?\\n.*/g, \"\"))\n    .sort((a, b) => a.length - b.length)\n    .pop();\n  return LongestTitle;\n}\n"],
  "mappings": "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",
  "names": ["target", "key", "e"]
}
